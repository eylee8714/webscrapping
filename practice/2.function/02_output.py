# sep 은 seperate, 변수 사이의 문자 지정할 수 있다.
# end 는 끝 문자 지정할 수 있으며, 다음에 오는 print가 이어서 나온다(줄바꿈 안된다.)

import sys

print("--------------------------------------------------")


print("Python", "Java", sep=" vs ", end="?")
print("무엇이 더 재밌을까요?")

print("--------------------------------------------------")

# import sys

# file=sys.stdout : 표준 출력으로 문장이 찍힌다.
print("Python", "Java", file=sys.stdout)
# file=sys.stderr : 표준 에러로 문장이 찍힌다.
print("Python", "Java", file=sys.stderr)

print("--------------------------------------------------")

# items를 이용하면 키와 밸류를 쌍으로 튜플로 보내준다.
# ljust(8) : 8칸 만든 상태에서 왼쪽정렬 / rjust(4) : 4칸 만든 상태에서 오른쪽정렬

scores = {"수학": 0, "영어": 50, "코딩": 100}
for subject, score in scores.items():
    print(subject.ljust(8), str(score).rjust(4))

print("--------------------------------------------------")
# 은행 대기순번표 001, 002, 003...
# zfill(3) : 3개 공간을 확보하고, 값이 없으면 0으로 채운다.
for num in range(1, 21):
    print("대기번호 :" + str(num).zfill(3))

print("--------------------------------------------------")

# input 값은 항상 문자열 형태로 저장된다.
answer = input("아무 값이나 입력하세요 :")
print(type(answer))
print("입력하신 값은 " + answer + "입니다.")

print("--------------------------------------------------")

# 빈자리는 빈공간으로 두고, 오른쪽 정렬을 하되, 총 10자리 공간을 확보
print("{0: > 10}".format(500))
# 양수일 땐 +로 표시, 음수일 땐 -로 표시
print("{0: >+10}".format(500))
print("{0: >+10}".format(-500))
# 왼쪽 정렬하고, 빈칸으로 _로 채움
print("{0:_<10}".format(500))
# 3자리마다 콤마를 찍어주기
print("{0:,}".format(100000000000))
# 3자리마다 콤마를 찍어주기, +- 부호도 붙이기
print("{0:+,}".format(100000000000))
print("{0:+,}".format(-100000000000))
# 빈자리는 ^로 채우기 | 왼쪽정렬 < | 부호붙이기 + | 30자리확보 | 3자리마다 콤마 붙이기
print("{0:^<+30,}".format(10000000000000000))
# 소수점 출력
print("{0:f}".format(5/3))
# 소수점 특정 자리수 까지만 표시 (소수점 3째 자리에서 반올림)
print("{0:.2f}".format(5/3))
